// Globally applicable styles only!

// Body helpers
// ------------------------------------------------

body {
    overflow-y: scroll;
    &.no-scroll {
        overflow-y: hidden;
    }
    
    min-height: 400px;
    /*border-top: solid 2px primary;*/

    &:after {
        content:'mobile';
        display: none;

        @media minPhablet { content:'phablet'; }
        @media minTablet { content:'tablet'; }
        @media minDesktop { content:'desktop'; }
        @media minWidescreen { content:'widescreen'; }
    }
}

.body--locked {
    position: fixed !important;
    width: 100%;

    @media print {
        position: static !important;
    }
}

.blk {
    .page__aside { display:none !important; }
    .header__navToggle, .header-navbar, .navbar, .footer, .header__nav, .header__user {
        opacity: 0;
        visibility:hidden;
    }

    .page .page__content {
        float:none;
        margin:0 auto;
        display:block;
        max-width: 650px;
        width: 100%;
    }
}

.header-navbar, .footer, .header__nav, .header__user {
    opacity:1;
    transition: opacity 250ms ease;
}

.optTitle {
    display: block;
}

.optEmpType {
    color: negative;
    font-size: 11px;
}

.optRate {
    color: grey4;
    font-size: 11px;
    margin-left: 0.5em;
}

// Alignment
//
// .align-right - Float to the right
// .align-left - Float to the left
// .align-cetner - Text align center
// .relative - Position relative
//
// Styleguide core.global.alignment

.text-right {
    text-align: right;
}

.text-left {
    text-align: left;
}

.align-right {
    float: right;
}

.align-left {
    float: left;
}

.align-center, .text-center {
    text-align:center;
}

.relative {
    position: relative;
}

.modals {
    display: none
}

.ta-hidden-input {
    display: none
}

// The .collapsing, .collapse and .in classes are added by Angular-UI Bootstrap's `collapse`
// directive. It needs a transition so that the webkitTransitionEnd event gets fired.
// If this event is not fired, the element gets stuck in a "collapsing" state forever.
.collapsing {
    overflow: hidden;
    transition: height 0.3s ease-in-out;
}

.collapse {
    display: none;
}

.collapse.in {
    display: block;
}

.ta-hidden-input {
    display: none
}

// The .collapsing, .collapse and .in classes are added by Angular-UI Bootstrap's `collapse`
// directive. It needs a transition so that the webkitTransitionEnd event gets fired.
// If this event is not fired, the element gets stuck in a "collapsing" state forever.
.collapsing {
    overflow: hidden;
    transition: height 0.3s ease-in-out;
}

.collapse {
    display: none;
}

.collapse.in {
    display: block;
}

.word-break {
    word-break: break-word;
}
